SQL

/*select NAME, salary, salary+10000 AS ADJUSTED_salary INTO employee2 from employee;
select name, ADJUSTED_salary from employee2;
1. COMPARISON OPERATOR USING WHERE
SELECT* FROM employee; 
SELECT NAME, salary FROM employee WHERE name LIKE 'ra%';
SELECT id, NAME, salary, created_date FROM employee WHERE id IN(20,30);
SELECT* FROM employee;  
 SELECT id, NAME, salary, created_date FROM employee WHERE id BETWEEN 20 AND 30;
SELECT id, NAME, salary, created_date FROM employee WHERE id BETWEEN 20 AND 30 ORDER BY name;
SELECT NAME, salary FROM employee WHERE name LIKE '_atish';
CREATE TABLE MYSALARY(EMPLOYEEID INT, SALARY FLOAT)

INSERT INTO MYSALARY(EMPLOYEEID, SALARY ) VALUES(1,10000)
INSERT INTO MYSALARY(EMPLOYEEID, SALARY ) VALUES(2,8000)
INSERT INTO MYSALARY(EMPLOYEEID, SALARY ) VALUES(3,6000)

CREATE TABLE MYSALARY(EMPLOYEEID INT, FIRSTNAME VARCHAR(20), LASTNAME VARCHAR(20));
INSERT INTO MYSALARY VALUES(1,'MICHAEL','SCOTT'); 
							INSERT INTO MYSALARY VALUES(9,'PAM','2/4/1678');

INSERT INTO MYSALARY VALUES(3,'DWIGHT','SCHRUTE');
SELECT * FROM EMPLOYEE;
SELECT * FROM MYSALARY;
update fi
ALTER TABLE mysalary Drop column lastname;
ALTER TABLE mysalary
MODIFY COLUMN column_name datatype;
UPDATE mysalary SET FIRSTNAME = 'ratish'WHERE FIRSTNAME LIKE 'PAM';
alter table mysalary ADD DateOfBirth date;
update MYSALARY set dateofbirth='3/23/1980' where firstname='ratish';
CREATE TABLE MYPHONE(EMPLOYEEID INT, PHONENUMBER INT);
INSERT INTO MYPHONE VALUES(5, 12345678);
INSERT INTO MYPHONE VALUES(6, 22222222);
SELECT* FROM MYPHONE;
SELECT A.FIRSTNAME, dateofbirth, b.PHONENUMBER FROM MYsalary A LEFT JOIN MYPHONE B ON A.EMPLOYEEID=B.EMPLOYEEID;
SELECT A.FIRSTNAME, dateofbirth, b.PHONENUMBER FROM MYsalary A inner joIN MYPHONE B ON A.EMPLOYEEID=B.EMPLOYEEID;
SELECT A.FIRSTNAME, dateofbirth, b.PHONENUMBER FROM MYsalary A righT JOIN MYPHONE B ON A.EMPLOYEEID=B.EMPLOYEEID;
SELECT A.FIRSTNAME, dateofbirth, b.PHONENUMBER FROM MYsalary A full outer join MYPHONE B ON A.EMPLOYEEID=B.EMPLOYEEID;
SELECT A.FIRSTNAME, dateofbirth, b.PHONENUMBER FROM MYsalary A cross join MYPHONE B;
 
SELECT Name, COUNT(COUNTRYREGIONCODE) AS COUNTRYCOUNT FROM employee GROUP BY CountryRegionCode HAVING COUNT(COUNTRYREGIONCODE)>50;
